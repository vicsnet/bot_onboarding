import { AxiosInstance } from "axios";
import { Label } from "./label";
export declare type GetLabels = (query: LabelQueryOptions) => Promise<LabelsResponse>;
export declare function provideGetLabels(axios: AxiosInstance): GetLabels;
export interface LabelQueryOptions {
    entities?: string[];
    labels?: string[];
    sourceIds?: string[];
    entityType?: string;
    state?: boolean;
    createdSince?: number;
    createdBefore?: number;
    first?: number;
    startingCursor?: LabelCursor;
}
export interface LabelCursor {
    pageToken: string;
}
export interface LabelsResponse {
    labels: Label[];
    pageInfo: {
        hasNextPage: boolean;
        endCursor?: {
            pageToken: string;
        };
    };
}
export declare const getQueryFromLabelOptions: (options: LabelQueryOptions) => {
    operationName: string;
    query: string;
    variables: {
        entities: string[] | undefined;
        entityType: string | undefined;
        labels: string[] | undefined;
        sourceIds: string[] | undefined;
        state: boolean | undefined;
        after: LabelCursor | undefined;
        first: number | undefined;
        createdBefore: number | undefined;
        createdSince: number | undefined;
    };
};
