"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Label = exports.ENTITY_TYPE_STRING_TO_ENUM = exports.EntityType = void 0;
var EntityType;
(function (EntityType) {
    EntityType[EntityType["Unknown"] = 0] = "Unknown";
    EntityType[EntityType["Address"] = 1] = "Address";
    EntityType[EntityType["Transaction"] = 2] = "Transaction";
    EntityType[EntityType["Block"] = 3] = "Block";
    EntityType[EntityType["Url"] = 4] = "Url";
})(EntityType = exports.EntityType || (exports.EntityType = {}));
exports.ENTITY_TYPE_STRING_TO_ENUM = {
    UNKNOWN: EntityType.Unknown,
    ADDRESS: EntityType.Address,
    TRANSACTION: EntityType.Transaction,
    BLOCK: EntityType.Block,
    URL: EntityType.Url,
};
var Label = (function () {
    function Label(entityType, entity, label, confidence, remove, metadata, source, id, createdAt, uniqueKey, embedding) {
        this.entityType = entityType;
        this.entity = entity;
        this.label = label;
        this.confidence = confidence;
        this.remove = remove;
        this.metadata = metadata;
        this.source = source;
        this.id = id;
        this.createdAt = createdAt;
        this.uniqueKey = uniqueKey;
        this.embedding = embedding;
    }
    Label.from = function (labelInput) {
        return this.fromObject(labelInput);
    };
    Label.fromObject = function (_a) {
        var entityType = _a.entityType, entity = _a.entity, label = _a.label, confidence = _a.confidence, _b = _a.remove, remove = _b === void 0 ? false : _b, _c = _a.metadata, metadata = _c === void 0 ? {} : _c, source = _a.source, id = _a.id, createdAt = _a.createdAt, uniqueKey = _a.uniqueKey, embedding = _a.embedding;
        if (typeof entityType == "string") {
            entityType = exports.ENTITY_TYPE_STRING_TO_ENUM[entityType];
        }
        if (Array.isArray(metadata)) {
            var metadataMap = {};
            for (var _i = 0, metadata_1 = metadata; _i < metadata_1.length; _i++) {
                var arrayItem = metadata_1[_i];
                var separatorIndex = arrayItem.indexOf("=");
                var key = arrayItem.substring(0, separatorIndex);
                var value = arrayItem.substring(separatorIndex + 1, arrayItem.length);
                metadataMap[key] = value;
            }
            metadata = metadataMap;
        }
        return new Label(entityType, entity, label, confidence, remove, metadata, source, id, createdAt, uniqueKey, embedding);
    };
    return Label;
}());
exports.Label = Label;
